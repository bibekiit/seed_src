/* Created by mdot for Matlab */
digraph m2html {
  FindOrient -> p;
  FindTheta -> p;
  bookstein -> dist2;
  clean_minutia -> p;
  do_match -> calc_orient;
  do_match -> dist2;
  do_match -> hist_cost_2;
  do_match -> register;
  do_match -> sc_compute;
  do_match -> tps_iter_match;
  enhance_images -> fft_enhance_cubs;
  enhance_images -> testfin;
  extract_db -> extract_finger;
  extract_finger -> calc_orient;
  extract_finger -> dist2;
  extract_finger -> fft_enhance_cubs;
  extract_finger -> p;
  extract_finger -> test_bifurcation;
  extract_finger -> testfin;
  extract_finger -> tico;
  extract_finger -> trace_path;
  fft_enhance_cubs -> compute_coherence;
  fft_enhance_cubs -> smoothen_frequency_image;
  fft_enhance_cubs -> smoothen_orientation_image;
  figures -> calc_orient;
  figures -> dist2;
  figures -> fft_enhance_cubs;
  figures -> p;
  figures -> test_bifurcation;
  figures -> testfin;
  figures -> tico;
  figures -> trace_path;
  filter_minutia -> p;
  freqest -> im;
  houghline -> p;
  main -> calc_EER;
  main -> do_match;
  normalise -> im;
  orientation_image_rao -> pseudo_matched_filter;
  orientation_image_rao -> smoothen_orientation_image;
  pathdef -> p;
  register -> calc_orient;
  register -> dist2;
  register -> hist_cost_2;
  register -> sc_compute;
  ridgefilter -> im;
  ridgefreq -> freqest;
  ridgefreq -> im;
  ridgeorient -> im;
  ridgesegment -> im;
  ridgesegment -> normalise;
  roc -> p;
  roc -> partest;
  sc_compute -> dist2;
  show -> im;
  test_bifurcation -> dist2;
  test_bifurcation -> p;
  testfin -> im;
  testfin -> ridgefilter;
  testfin -> ridgefreq;
  testfin -> ridgeorient;
  testfin -> ridgesegment;
  tps_iter_match -> bookstein;
  tps_iter_match -> dist2;
  tps_iter_match -> hist_cost_2;
  tps_iter_match -> hungarian;
  tps_iter_match -> sc_compute;
  tps_iter_match_no_anchors -> bookstein;
  tps_iter_match_no_anchors -> dist2;
  tps_iter_match_no_anchors -> hist_cost_2;
  tps_iter_match_no_anchors -> hungarian;
  tps_iter_match_no_anchors -> sc_compute;
  trace_path -> p;

  FindOrient [URL="FindOrient.html"];
  FindTheta [URL="FindTheta.html"];
  angular_filter_bank [URL="angular_filter_bank.html"];
  bookstein [URL="bookstein.html"];
  calc_EER [URL="calc_EER.html"];
  calc_FMR_pdf [URL="calc_FMR_pdf.html"];
  calc_FNMR_pdf [URL="calc_FNMR_pdf.html"];
  calc_genuine_pdf [URL="calc_genuine_pdf.html"];
  calc_imposter_pdf [URL="calc_imposter_pdf.html"];
  calc_orient [URL="calc_orient.html"];
  calculate_FMR [URL="calculate_FMR.html"];
  calculate_FNMR [URL="calculate_FNMR.html"];
  clean_minutia [URL="clean_minutia.html"];
  compute_coherence [URL="compute_coherence.html"];
  dist2 [URL="dist2.html"];
  do_match [URL="do_match.html"];
  enhance_images [URL="enhance_images.html"];
  extract_db [URL="extract_db.html"];
  extract_finger [URL="extract_finger.html"];
  fft_enhance_cubs [URL="fft_enhance_cubs.html"];
  figures [URL="figures.html"];
  filter_minutia [URL="filter_minutia.html"];
  freqest [URL="freqest.html"];
  gaussker [URL="gaussker.html"];
  hist_cost_2 [URL="hist_cost_2.html"];
  houghline [URL="houghline.html"];
  hungarian [URL="hungarian.html"];
  im [URL="im.html"];
  main [URL="main.html"];
  match [URL="match.html"];
  normalise [URL="normalise.html"];
  orientation_image_rao [URL="orientation_image_rao.html"];
  p [URL="p.html"];
  partest [URL="partest.html"];
  pathdef [URL="pathdef.html"];
  plotridgeorient [URL="plotridgeorient.html"];
  pseudo_matched_filter [URL="pseudo_matched_filter.html"];
  radial_filter_bank [URL="radial_filter_bank.html"];
  register [URL="register.html"];
  ridgefilter [URL="ridgefilter.html"];
  ridgefreq [URL="ridgefreq.html"];
  ridgeorient [URL="ridgeorient.html"];
  ridgesegment [URL="ridgesegment.html"];
  roc [URL="roc.html"];
  sc_compute [URL="sc_compute.html"];
  show [URL="show.html"];
  smoothen_frequency_image [URL="smoothen_frequency_image.html"];
  smoothen_orientation_image [URL="smoothen_orientation_image.html"];
  test_bifurcation [URL="test_bifurcation.html"];
  testfin [URL="testfin.html"];
  tico [URL="tico.html"];
  tps_iter_match [URL="tps_iter_match.html"];
  tps_iter_match_no_anchors [URL="tps_iter_match_no_anchors.html"];
  trace_path [URL="trace_path.html"];
  view_orientation_image [URL="view_orientation_image.html"];
}